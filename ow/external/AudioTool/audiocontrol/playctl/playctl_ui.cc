#include "audio_i18n.h"
//
// playctl_ui.cc - User interface object initialization functions.
// This file was generated by `gxv++' from `playctl.G'.
// DO NOT EDIT BY HAND.
//

#include <stdio.h>
#include <sys/param.h>
#include <sys/types.h>
#include <xview/xview.h>
#include <xview/canvas.h>
#include <xview/panel.h>
#include <xview/scrollbar.h>
#include <xview/svrimage.h>
#include <xview/termsw.h>
#include <xview/text.h>
#include <xview/tty.h>
#include <xview/xv_xrect.h>
#include <group.h>
#include "playctl_ui.h"

//
// Create object `PlayctlPanel_menu' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_menu_create(caddr_t ip, Xv_opaque owner)
{
	extern Menu_item	playctl_PlayctlPanel_menu_item0_callback(Menu_item, Menu_generate);
	extern Menu_item	playctl_PlayctlPanel_menu_item1_callback(Menu_item, Menu_generate);
	Xv_opaque	obj;
	
	obj = xv_create(XV_NULL, MENU_COMMAND_MENU,
		XV_KEY_DATA, INSTANCE, ip,
		XV_HELP_DATA, "audiocontrol:playctl-PlayctlPanel_menu",
		MENU_TITLE_ITEM, owner ? "" : dgettext("SUNW_DESKSET_AUDIOCONTROL", "Audio Control"),
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, dgettext("SUNW_DESKSET_AUDIOCONTROL", "Record..."),
			MENU_GEN_PROC, playctl_PlayctlPanel_menu_item0_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, dgettext("SUNW_DESKSET_AUDIOCONTROL", "Status..."),
			MENU_GEN_PROC, playctl_PlayctlPanel_menu_item1_callback,
			NULL,
		NULL);
	return obj;
}

//
// Initialize an instance of object `PlayctlPanel'.
//
void
playctl_PlayctlPanel_objects::objects_initialize(Xv_opaque owner)
{
	PlayctlPanel = PlayctlPanel_create(owner);
	PlayctlCanvas = PlayctlCanvas_create(PlayctlPanel);
	Outport0 = Outport0_create(PlayctlCanvas);
	Outport1 = Outport1_create(PlayctlCanvas);
	Outport2 = Outport2_create(PlayctlCanvas);
	PlayOutputGroup = PlayOutputGroup_create(PlayctlCanvas);
	RecpanelButton = RecpanelButton_create(PlayctlCanvas);
	RecordButtonGroup = RecordButtonGroup_create(PlayctlCanvas);
	MuteButton = MuteButton_create(PlayctlCanvas);
	PlayMuteGroup = PlayMuteGroup_create(PlayctlCanvas);
	PlayVolumeMsg = PlayVolumeMsg_create(PlayctlCanvas);
	PlayVolumeSlider = PlayVolumeSlider_create(PlayctlCanvas);
	PlaySliderGroup = PlaySliderGroup_create(PlayctlCanvas);
	PlayBalanceMsg = PlayBalanceMsg_create(PlayctlCanvas);
	PlayBalanceLeftMsg = PlayBalanceLeftMsg_create(PlayctlCanvas);
	PlayBalanceSlider = PlayBalanceSlider_create(PlayctlCanvas);
	PlayBalanceLeftSliderGroup = PlayBalanceLeftSliderGroup_create(PlayctlCanvas);
	PlayBalanceRightMsg = PlayBalanceRightMsg_create(PlayctlCanvas);
	PlayBalanceSliderGroup = PlayBalanceSliderGroup_create(PlayctlCanvas);
	PlayBalanceGroup = PlayBalanceGroup_create(PlayctlCanvas);
	window_fit(PlayctlCanvas);
	
	window_fit(PlayctlPanel);
	
	xv_set(PlayctlCanvas,
		XV_WIDTH, WIN_EXTEND_TO_EDGE,
		XV_HEIGHT, WIN_EXTEND_TO_EDGE,
		NULL);
}

//
// Create object `PlayctlPanel' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayctlPanel_create(Xv_opaque owner)
{
	extern Notify_value	playctl_PlayctlPanel_event_callback(Xv_window, Event *, Notify_arg, Notify_event_type);
	Xv_opaque	obj;
	Xv_opaque		PlayctlPanel_image;
	static unsigned short	PlayctlPanel_bits[] = {
#include "playctl.icon"
	};
	Xv_opaque		PlayctlPanel_image_mask;
	static unsigned short	PlayctlPanel_mask_bits[] = {
#include "playctl.mask.icon"
	};
	
	PlayctlPanel_image = xv_create(XV_NULL, SERVER_IMAGE,
		SERVER_IMAGE_DEPTH, 1,
		SERVER_IMAGE_BITS, PlayctlPanel_bits,
		XV_WIDTH, 64,
		XV_HEIGHT, 64,
		NULL);
	PlayctlPanel_image_mask = xv_create(XV_NULL, SERVER_IMAGE,
		SERVER_IMAGE_DEPTH, 1,
		SERVER_IMAGE_BITS, PlayctlPanel_mask_bits,
		XV_WIDTH, 64,
		XV_HEIGHT, 64,
		NULL);
	obj = xv_create(owner, FRAME,
		XV_KEY_DATA, INSTANCE, this,
		XV_WIDTH, 394,
		XV_HEIGHT, 100,
		XV_LABEL, dgettext("SUNW_DESKSET_AUDIOCONTROL", "Audio Control: Play"),
		FRAME_SHOW_FOOTER, FALSE,
		FRAME_SHOW_RESIZE_CORNER, FALSE,
		FRAME_ICON, xv_create(XV_NULL, ICON,
			ICON_IMAGE, PlayctlPanel_image,
			ICON_MASK_IMAGE, PlayctlPanel_image_mask,
			NULL),
		NULL);
	xv_set(obj, WIN_CONSUME_EVENTS,
		NULL, NULL);
	notify_interpose_event_func(obj,
		(Notify_func) playctl_PlayctlPanel_event_callback, NOTIFY_SAFE);
	return obj;
}

//
// Create object `PlayctlCanvas' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayctlCanvas_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL,
		XV_KEY_DATA, INSTANCE, this,
		XV_HELP_DATA, "audiocontrol:playctl-PlayctlCanvas",
		XV_X, 0,
		XV_Y, 0,
		XV_WIDTH, WIN_EXTEND_TO_EDGE,
		XV_HEIGHT, WIN_EXTEND_TO_EDGE,
		WIN_BORDER, TRUE,
		WIN_USE_IM, FALSE,
		NULL);
	return obj;
}

//
// Create object `Outport0' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::Outport0_create(Xv_opaque owner)
{
	extern void		Playctl_outport_proc(Panel_item, unsigned int, Event *);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_TOGGLE,
		XV_KEY_DATA, INSTANCE, this,
		XV_HELP_DATA, "audiocontrol:playctl-Outport0",
		XV_X, 10,
		XV_Y, 8,
		PANEL_CHOICE_NROWS, 1,
		PANEL_LAYOUT, PANEL_HORIZONTAL,
		PANEL_NOTIFY_PROC, Playctl_outport_proc,
		PANEL_CHOICE_STRING, 0, dgettext("SUNW_DESKSET_AUDIOCONTROL", "Speaker"),
		PANEL_VALUE, 0,
		NULL);
	return obj;
}

//
// Create object `Outport1' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::Outport1_create(Xv_opaque owner)
{
	extern void		Playctl_outport_proc(Panel_item, unsigned int, Event *);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_TOGGLE,
		XV_KEY_DATA, INSTANCE, this,
		XV_HELP_DATA, "audiocontrol:playctl-Outport1",
		XV_X, 82,
		XV_Y, 8,
		PANEL_CHOICE_NROWS, 1,
		PANEL_LAYOUT, PANEL_HORIZONTAL,
		PANEL_NOTIFY_PROC, Playctl_outport_proc,
		PANEL_CHOICE_STRING, 0, dgettext("SUNW_DESKSET_AUDIOCONTROL", "Headphone"),
		PANEL_VALUE, 0,
		NULL);
	return obj;
}

//
// Create object `Outport2' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::Outport2_create(Xv_opaque owner)
{
	extern void		Playctl_outport_proc(Panel_item, unsigned int, Event *);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_TOGGLE,
		XV_KEY_DATA, INSTANCE, this,
		XV_HELP_DATA, "audiocontrol:playctl-Outport2",
		XV_X, 175,
		XV_Y, 8,
		PANEL_CHOICE_NROWS, 1,
		PANEL_LAYOUT, PANEL_HORIZONTAL,
		PANEL_NOTIFY_PROC, Playctl_outport_proc,
		PANEL_CHOICE_STRING, 0, dgettext("SUNW_DESKSET_AUDIOCONTROL", "Line Out"),
		PANEL_VALUE, 0,
		NULL);
	return obj;
}

//
// Create object `PlayOutputGroup' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayOutputGroup_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, GROUP,
		XV_KEY_DATA, INSTANCE, this,
		XV_X, 10,
		XV_Y, 8,
		GROUP_TYPE, GROUP_ROW,
		GROUP_MEMBERS,
			Outport0,
			Outport1,
			Outport2,
			NULL,
		GROUP_ROW_ALIGNMENT, GROUP_HORIZONTAL_CENTERS,
		GROUP_HORIZONTAL_SPACING, 8,
		GROUP_ANCHOR_OBJ, PlayctlCanvas,
		GROUP_ANCHOR_POINT, GROUP_NORTHWEST,
		GROUP_REFERENCE_POINT, GROUP_NORTHWEST,
		GROUP_HORIZONTAL_OFFSET, 10,
		GROUP_VERTICAL_OFFSET, 8,
		NULL);
	return obj;
}

//
// Create object `RecpanelButton' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::RecpanelButton_create(Xv_opaque owner)
{
	extern void		playctl_PlayctlPanel_RecpanelButton_notify_callback(Panel_item, Event *);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_BUTTON,
		XV_KEY_DATA, INSTANCE, this,
		XV_HELP_DATA, "audiocontrol:playctl-RecpanelButton",
		XV_X, 316,
		XV_Y, 8,
		PANEL_LABEL_STRING, dgettext("SUNW_DESKSET_AUDIOCONTROL", "Record..."),
		PANEL_NOTIFY_PROC, playctl_PlayctlPanel_RecpanelButton_notify_callback,
		NULL);
	return obj;
}

//
// Create object `RecordButtonGroup' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::RecordButtonGroup_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, GROUP,
		XV_KEY_DATA, INSTANCE, this,
		XV_X, 316,
		XV_Y, 8,
		GROUP_TYPE, GROUP_NONE,
		GROUP_MEMBERS,
			RecpanelButton,
			NULL,
		GROUP_ANCHOR_OBJ, PlayctlCanvas,
		GROUP_ANCHOR_POINT, GROUP_NORTHEAST,
		GROUP_REFERENCE_POINT, GROUP_NORTHEAST,
		GROUP_HORIZONTAL_OFFSET, -10,
		GROUP_VERTICAL_OFFSET, 8,
		NULL);
	return obj;
}

//
// Create object `MuteButton' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::MuteButton_create(Xv_opaque owner)
{
	extern void		Playctl_mute_proc(Panel_item, unsigned int, Event *);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_TOGGLE,
		XV_KEY_DATA, INSTANCE, this,
		XV_HELP_DATA, "audiocontrol:playctl-MuteButton",
		XV_X, 336,
		XV_Y, 46,
		PANEL_CHOICE_NROWS, 1,
		PANEL_LAYOUT, PANEL_HORIZONTAL,
		PANEL_NOTIFY_PROC, Playctl_mute_proc,
		PANEL_CHOICE_STRING, 0, dgettext("SUNW_DESKSET_AUDIOCONTROL", "Mute"),
		PANEL_VALUE, 0,
		NULL);
	return obj;
}

//
// Create object `PlayMuteGroup' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayMuteGroup_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, GROUP,
		XV_KEY_DATA, INSTANCE, this,
		XV_X, 336,
		XV_Y, 46,
		GROUP_TYPE, GROUP_NONE,
		GROUP_MEMBERS,
			MuteButton,
			NULL,
		NULL);
	return obj;
}

//
// Create object `PlayVolumeMsg' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayVolumeMsg_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_MESSAGE,
		XV_KEY_DATA, INSTANCE, this,
		XV_HELP_DATA, "audiocontrol:playctl-PlayVolumeMsg",
		XV_X, 12,
		XV_Y, 49,
		PANEL_LABEL_STRING, dgettext("SUNW_DESKSET_AUDIOCONTROL", "Play Volume:"),
		PANEL_LABEL_BOLD, TRUE,
		NULL);
	return obj;
}

//
// Create object `PlayVolumeSlider' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayVolumeSlider_create(Xv_opaque owner)
{
	extern void		Playctl_volume_proc(Panel_item, int, Event *);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_SLIDER,
		XV_KEY_DATA, INSTANCE, this,
		XV_HELP_DATA, "audiocontrol:playctl-PlayVolumeSlider",
		XV_X, 108,
		XV_Y, 49,
		PANEL_SLIDER_WIDTH, 100,
		PANEL_TICKS, 0,
		PANEL_DIRECTION, PANEL_HORIZONTAL,
		PANEL_SLIDER_END_BOXES, FALSE,
		PANEL_SHOW_RANGE, FALSE,
		PANEL_SHOW_VALUE, TRUE,
		PANEL_MIN_VALUE, 0,
		PANEL_MAX_VALUE, 100,
		PANEL_MIN_VALUE_STRING, dgettext("SUNW_DESKSET_AUDIOCONTROL", "0"),
		PANEL_MAX_VALUE_STRING, dgettext("SUNW_DESKSET_AUDIOCONTROL", "100"),
		PANEL_VALUE, 0,
		PANEL_NOTIFY_PROC, Playctl_volume_proc,
		NULL);
	return obj;
}

//
// Create object `PlaySliderGroup' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlaySliderGroup_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, GROUP,
		XV_KEY_DATA, INSTANCE, this,
		XV_X, 12,
		XV_Y, 49,
		GROUP_TYPE, GROUP_ROW,
		GROUP_MEMBERS,
			PlayVolumeMsg,
			PlayVolumeSlider,
			NULL,
		GROUP_ROW_ALIGNMENT, GROUP_TOP_EDGES,
		GROUP_HORIZONTAL_SPACING, 8,
		GROUP_ANCHOR_OBJ, PlayOutputGroup,
		GROUP_ANCHOR_POINT, GROUP_SOUTHWEST,
		GROUP_REFERENCE_POINT, GROUP_NORTHWEST,
		GROUP_HORIZONTAL_OFFSET, 2,
		GROUP_VERTICAL_OFFSET, 18,
		NULL);
	return obj;
}

//
// Create object `PlayBalanceMsg' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayBalanceMsg_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_MESSAGE,
		XV_KEY_DATA, INSTANCE, this,
		XV_HELP_DATA, "audiocontrol:playctl-PlayBalanceMsg",
		XV_X, 43,
		XV_Y, 73,
		PANEL_LABEL_STRING, dgettext("SUNW_DESKSET_AUDIOCONTROL", "Balance:"),
		PANEL_LABEL_BOLD, TRUE,
		NULL);
	return obj;
}

//
// Create object `PlayBalanceLeftMsg' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayBalanceLeftMsg_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_MESSAGE,
		XV_KEY_DATA, INSTANCE, this,
		XV_HELP_DATA, "audiocontrol:playctl-PlayBalanceLeftMsg",
		XV_X, 113,
		XV_Y, 73,
		PANEL_LABEL_STRING, dgettext("SUNW_DESKSET_AUDIOCONTROL", "Left"),
		PANEL_LABEL_BOLD, FALSE,
		NULL);
	return obj;
}

//
// Create object `PlayBalanceSlider' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayBalanceSlider_create(Xv_opaque owner)
{
	extern void		Playctl_balance_proc(Panel_item, int, Event *);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_SLIDER,
		XV_KEY_DATA, INSTANCE, this,
		XV_HELP_DATA, "audiocontrol:playctl-PlayBalanceSlider",
		XV_X, 150,
		XV_Y, 73,
		PANEL_SLIDER_WIDTH, 100,
		PANEL_TICKS, 3,
		PANEL_DIRECTION, PANEL_HORIZONTAL,
		PANEL_SLIDER_END_BOXES, FALSE,
		PANEL_SHOW_RANGE, FALSE,
		PANEL_SHOW_VALUE, FALSE,
		PANEL_MIN_VALUE, 0,
		PANEL_MAX_VALUE, 64,
		PANEL_VALUE, 32,
		PANEL_NOTIFY_PROC, Playctl_balance_proc,
		NULL);
	return obj;
}

//
// Create object `PlayBalanceLeftSliderGroup' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayBalanceLeftSliderGroup_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, GROUP,
		XV_KEY_DATA, INSTANCE, this,
		XV_X, 113,
		XV_Y, 73,
		GROUP_TYPE, GROUP_ROW,
		GROUP_MEMBERS,
			PlayBalanceLeftMsg,
			PlayBalanceSlider,
			NULL,
		GROUP_ROW_ALIGNMENT, GROUP_TOP_EDGES,
		GROUP_HORIZONTAL_SPACING, 14,
		NULL);
	return obj;
}

//
// Create object `PlayBalanceRightMsg' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayBalanceRightMsg_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_MESSAGE,
		XV_KEY_DATA, INSTANCE, this,
		XV_HELP_DATA, "audiocontrol:playctl-PlayBalanceRightMsg",
		XV_X, 272,
		XV_Y, 73,
		PANEL_LABEL_STRING, dgettext("SUNW_DESKSET_AUDIOCONTROL", "Right"),
		PANEL_LABEL_BOLD, FALSE,
		NULL);
	return obj;
}

//
// Create object `PlayBalanceSliderGroup' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayBalanceSliderGroup_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, GROUP,
		XV_KEY_DATA, INSTANCE, this,
		XV_X, 113,
		XV_Y, 73,
		GROUP_TYPE, GROUP_ROW,
		GROUP_MEMBERS,
			PlayBalanceLeftSliderGroup,
			PlayBalanceRightMsg,
			NULL,
		GROUP_ROW_ALIGNMENT, GROUP_TOP_EDGES,
		GROUP_HORIZONTAL_SPACING, 6,
		NULL);
	return obj;
}

//
// Create object `PlayBalanceGroup' in the specified instance.
//
Xv_opaque
playctl_PlayctlPanel_objects::PlayBalanceGroup_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, GROUP,
		XV_KEY_DATA, INSTANCE, this,
		XV_X, 43,
		XV_Y, 73,
		GROUP_TYPE, GROUP_ROW,
		GROUP_MEMBERS,
			PlayBalanceMsg,
			PlayBalanceSliderGroup,
			NULL,
		GROUP_ROW_ALIGNMENT, GROUP_TOP_EDGES,
		GROUP_HORIZONTAL_SPACING, 13,
		GROUP_ANCHOR_OBJ, PlaySliderGroup,
		GROUP_ANCHOR_POINT, GROUP_SOUTHWEST,
		GROUP_REFERENCE_POINT, GROUP_NORTHWEST,
		GROUP_HORIZONTAL_OFFSET, 31,
		GROUP_VERTICAL_OFFSET, 4,
		NULL);
	return obj;
}

