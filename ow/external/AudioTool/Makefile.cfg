# Make configuration file for audio platform tools
#
# @(#)Makefile.cfg	1.43	97/01/14 SMI
#


# All configuration options for are in this file. This is included 
# in all subsidiary Makefiles at the very beginning. Inputs are:
#
#	BASEDIR:	relative path to the base of the source tree
#			(set in each subdir Makefile before including this).

#----------------------------------------------------------------------------
# Configurable options
#----------------------------------------------------------------------------
#

#
# Set VARIANT to default built type (opt for optimized, debug or gprof). It
# is the type of executable that'll be built by default. If you "make opt"
# or "make debug", etc., it'll override the VARIANT. Likewise, to install
# a different variant, you must type "make instdebug", make "instopt", etc.
#
# To change the default variant w/o editing this file, create a file
# in ${BASEDIR} called ".variant" with a single line that has the name
# of the variant you want to build by default. 
#
VARIANT		= 	opt

# LD_RUN_PATH needs to be set in the environment at link to
# to include any directory that should be searched by default
# at run time. this alleviates the need for a user to set
# LD_LIBRARY_PATH.

LD_RUN_PATH		= /usr/openwin/lib


# X11/OpenWindows info

# explicitly set OPENWINHOME for SVR4 builds.
SUNOS_OPENWINHOME:sh	= echo ${OWBUILDHOME:-${OPENWINHOME:-/usr/openwin}}
MARS_OPENWINHOME:sh	= echo ${OWBUILDHOME:-${OPENWINHOME:-/usr/dist/svr4/openwin}}
SVR4_OPENWINHOME:sh	= echo ${OWBUILDHOME:-${OPENWINHOME:-/usr/openwin}}
OPENWINHOME		= $($(TARG_SYS)_OPENWINHOME)

SUNOS_AUX_XVIEW_INC	=
MARS_AUX_XVIEW_INC	=
SVR4_AUX_XVIEW_INC	=
AUX_XVIEW_INC		= $($(TARG_SYS)_AUX_XVIEW_INC)

SUNOS_AUX_XVIEW_LIBDIR	=
MARS_AUX_XVIEW_LIBDIR	= 
SVR4_AUX_XVIEW_LIBDIR	= 
AUX_XVIEW_LIBDIR	= $($(TARG_SYS)_AUX_XVIEW_LIBDIR)

#
# Set X11INC to find .h files referenced by #include <xview/xxx.h> and
# #include <X11/xxx.h>. Change this to where XView is installed, if you 
# don't have OPENWINDOWS installed on your system.
#
X11INC			= $(AUX_XVIEW_INC) -I$(OPENWINHOME)/include -I$(XW_HOME)/include

# Set X11LIBDIR to the directory where libX11.a, libxview.a and libolgx.a
# can be found, if you don't have OPENWINDOWS installed.
#
X11LIBDIR		= $(AUX_XVIEW_LIBDIR) -L$(OPENWINHOME)/lib -L$(XW_HOME)/lib

# libraries
X11LIBS			= $(X11LIBDIR) -lxview -lolgx -lX11

SUNOS_LIBDSTT		= 
MARS_LIBDSTT		= 
SVR4_LIBDSTT		= -ldstt
LIBDSTT			= $($(TARG_SYS)_LIBDSTT)

DESKSETLIBS		= $(LIBDSTT) -ldeskset -ltt -lce

# Devguide info
#
# Devguide is not required since a copy of the necessary parts are 
# part of this source tree. However, if you wish to modify the 
# Devguide UI files, you'll need to have Devguide installed.
#
# If you don't have Devguide 3.0 (or later) installed on your system,
# use these definitions. 
#
# GUIDESRC   	= $(BASEDIR)/guidexv
# GUIDEDIR	= $(GUIDESRC)
# GUIDEINC   	= -I$(GUIDEDIR)
# GUIDELIBS	= ${GUIDEDIR}/${DIR.obj}/libguidexv.a

# 
# Use these definitions if you do have Devguide installed and want to use
# the libraries/headers in the install tree.
#

#SUNOS_GUIDEHOME:sh = echo ${GUIDEHOME:-/usr/dist/local/pkgs/devguide,v3.0}
#MARS_GUIDEHOME:sh  = echo ${GUIDEHOME:-/opt/SUNWguide}
#	SVR4_GUIDEHOME:sh  = echo ${GUIDEHOME:-/opt/SUNWguide}
#	REMDIND: this should be the version above, but NC uses this other stuff
#	SVR4_GUIDEHOME:sh  = echo ${GUIDEHOME:-/usr/dist/local/pkgs/devguide,v3.0}
#GUIDEHOME	= $($(TARG_SYS)_GUIDEHOME)

GUIDESRC	=
GUIDEDIR	= $(GUIDEHOME) 
GUIDEINC   	= -I$(GUIDEDIR)/include
GUIDELIBS	= -L$(GUIDEDIR)/lib -lguidexv

# where to find gxv, and default gxv flags
GXV		= $(GUIDEHOME)/bin/gxv
GXVCC		= $(GUIDEHOME)/bin/gxv++
GFLAGS		= -n -g
gensources	:= GFLAGS += -a
rungxv		:= GFLAGS += -a

# the following define standalone packages that are used with the audio s/w

# audio library defines
AUDIODIR     	= ${BASEDIR}/libAudio
AUDIOINC  	= -I${BASEDIR}/include
AUDIOLIBS	= ${AUDIODIR}/${DIR.obj}/libAudio.a

# radio library defines (for RFE programs)
RADIODIR     	= ${BASEDIR}/radio/libradio
RADIOINC  	= -I${RADIODIR}
RADIOLIBS	= ${RADIODIR}/${DIR.obj}/libradio.a

# common libs and inc's and stuff
METERDIR        = ${BASEDIR}/common/meter
METERINC	= -I${METERDIR}
METERLIBS	= ${METERDIR}/${DIR.obj}/libmeter.a

LISTMGRDIR      = ${BASEDIR}/common/listmgr
LISTMGRINC	= -I${LISTMGRDIR}
LISTMGRLIBS	= ${LISTMGRDIR}/${DIR.obj}/liblistmgr.a

# our xface/exten's to DeskSet TT library (dstt) for Media Alliance proto
DSTTDIR		= ${BASEDIR}/common/dsttexten
DSTTINC		= -I${DSTTDIR}
DSTTLIBS	= ${DSTTDIR}/${DIR.obj}/libdsttexten.a

# Misc stuff.
#
# Define this if you have the mprof package for debugging memory leaks.
# MPROF		= -L$(HOME)/src/mprof -lc_mp
#
MPROF		=

#
# Define this if you have purify (DON'T use with MPROF)
#
PURIFY		=

# AudioTool specific options
#
# Optional defines include:
#
#	-DDEBUG_PRINT	- for debug output (this is enabled when builing
#			  the debug target).

AUDIODEFS	=

#
# Default compile/link flags (if no VARIANT given)
#
CFLAGS		= -O

LDFLAGS		= -R/usr/openwin/lib

# SUNMATHLIB.${MACH}	=
# SUNMATHLIB.ppc		=  -L/opt/SUNWspro/SC4.0/lib -lsunmath
# SUNMATHLIB		=  ${SUNMATHLIB.${MACH}} 
SUNMATHLIB		=  -Bstatic -lsunmath -Bdynamic

# "global" compile flags ...
SUNOS_DEFS	= -DPRE_493
MARS_DEFS	= -DPRE_493
SVR4_DEFS	= 
DEFS		= $($(TARG_SYS)_DEFS)

#
# ----------------------------------------------------------------------------
# End of configurable stuff.
# ----------------------------------------------------------------------------
#

# This stuff should, for the most part, remain unchanged 

#
# Use $DEST_SYS for destination directories
#
DEST_SYS:sh = \
 (					\
   case ${TARGET_SYS} in		\
   ?*) echo ${TARGET_SYS};		\
          exit 0;;			\
   esac;				\
   UNAME=` uname -r 2>/dev/null` ||.;	\
   case $UNAME in			\
   '') echo SUNOS;;			\
   4.*) echo SUNOS;;			\
   *)  echo SVR4;;			\
   esac					\
 )

#
# Use $TARG_SYS for OS dependent variables (maps XFP->SVR4)
#
TARG_SYS = ${DEST_SYS:XFP=SVR4}

#
# Set machine architecture type (no mach command in SVr4)
#
MACH:sh = \
 (					\
   UNAME=` uname -r 2>/dev/null` ||.;	\
   case $UNAME in			\
   '') mach ;;				\
   4.*) mach ;;				\
   *)  uname -p;;			\
   esac					\
 )

#
# Sets the object file directory by checking machine architecture type.
#
ARCH:sh		= set `uname -m`;\
		  case $1 in sun4*) echo sun4;; *) echo $1;; esac
SUNOS_OBJDIR	= obj-${ARCH}
MARS_OBJDIR	= obj-${ARCH}-mars
SVR4_OBJDIR	= obj-${ARCH}-svr4
XFP_OBJDIR	= obj-${ARCH}-xfp
OBJDIR		= $($(DEST_SYS)_OBJDIR)

# where to put stuff for a "make install"
#
SUNOS_PROTODIR	= ${BASEDIR}/Proto-${ARCH}
MARS_PROTODIR	= ${BASEDIR}/Proto-${ARCH}-mars
SVR4_PROTODIR	= ${BASEDIR}/Proto-${ARCH}-svr4
XFP_PROTODIR	= ${BASEDIR}/Proto-${ARCH}-xfp
PROTODIR	= $($(DEST_SYS)_PROTODIR)

# System defines (for OS specific conditional compile)
SUNOS_SYSDEFS	= -DSUNOS41
MARS_SYSDEFS	=
SVR4_SYSDEFS	=
SYSDEFS		= $($(TARG_SYS)_SYSDEFS)

# Compiler code generation flags. For SVR4, generate Viking instructions
SUNOS_sun4_CC_CGFLAGS	=
MARS_sun4_CC_CGFLAGS 	= -xcg89 -Wa,-cg92
SVR4_sun4_CC_CGFLAGS 	= -xcg89 -Wa,-cg92
SVR4_i86pc_CC_CGFLAGS 	= 
CC_CGFLAGS		= $($(TARG_SYS)_${ARCH}_CC_CGFLAGS)

SUNOS_sun4_CCC_CGFLAGS	=
MARS_sun4_CCC_CGFLAGS	= -cg89 -Qoption fbe -cg92
SVR4_sun4_CCC_CGFLAGS	= -cg89 -Qoption fbe -cg92
SVR4_i86pc_CCC_CGFLAGS	= 
CCC_CGFLAGS		= $($(TARG_SYS)_${ARCH}_CCC_CGFLAGS)

# Source browser stuff. HACK: if .sbinit exists in ${BASEDIR}, enable
# the source browser on compiles.
#
USE_SB.METHOD	= if [ -f ${BASEDIR}/.sbinit ] ; then \
		     /bin/echo YES ; else /bin/echo NO ; fi

# USE_SB		= ${USE_SB.METHOD:sh}
USE_SB		= NO

YES_CC_SBFLAGS	= -xsb
NO_CC_SBFLAGS	=
CC_SBFLAGS	= $($(USE_SB)_CC_SBFLAGS)

YES_CCC_SBFLAGS	= -sb
NO_CCC_SBFLAGS	=
CCC_SBFLAGS	= $($(USE_SB)_CCC_SBFLAGS)

# compilers and tools
SUNOS_LANGDIR	= /usr/dist/local/share/sunpro,v2.0.1/sol-1.${MACH}/SC2.0.1
MARS_LANGDIR	= /opt/SUNWspro
SVR4_LANGDIR	= /opt/SUNWspro
LANGDIR		= $($(TARG_SYS)_LANGDIR)

SUNOS_CC	= ${LANGDIR}/acc
MARS_CC		= cc
SVR4_CC		= cc
CC		= $($(TARG_SYS)_CC)

SUNOS_CCC	= ${LANGDIR}/CC
MARS_CCC	= CC
SVR4_CCC	= CC
CCC		= $($(TARG_SYS)_CCC)

LD		= ld

# ANSI C library (only needed fo SunOS 4.x)
SUNOS_ANSILIBS	= -L${LANGDIR} -L${LANGDIR}/ansi_lib -lansi
MARS_ANSILIBS	=
SVR4_ANSILIBS	=
ANSILIBS	= $($(TARG_SYS)_ANSILIBS)

# I18N libs (only needed for SVR4)
SUNOS_INTLIBS	=
MARS_INTLIBS	= -lintl
SVR4_INTLIBS	= -lintl
INTLIBS		= $($(TARG_SYS)_INTLIBS)

# socket libs (only needed for SVR4)
SUNOS_SOCKETLIBS=
MARS_SOCKETLIBS = -lsocket -lnsl
SVR4_SOCKETLIBS = -lsocket -lnsl
SOCKETLIBS	= $($(TARG_SYS)_SOCKETLIBS)

# System libs (only needed for C++ linking)
SUNOS_SYSLIBS	= -ldl -lc
MARS_SYSLIBS	= -lw -ldl -lc
SVR4_SYSLIBS	= -lw -ldl -lc
SYSLIBS		= $($(TARG_SYS)_SYSLIBS)

SUNOS_RANLIB	= ranlib
MARS_RANLIB	= echo skipping ranlib
SVR4_RANLIB	= echo skipping ranlib
RANLIB		= $($(TARG_SYS)_RANLIB)

SUNOS_XGETTEXT	= echo
MARS_XGETTEXT	= xgettext
SVR4_XGETTEXT	= xgettext
XGETTEXT	= $($(TARG_SYS)_XGETTEXT)

SUNOS_AWK	= awk
MARS_AWK	= nawk
SVR4_AWK	= nawk
AWK		= $($(TARG_SYS)_AWK)

SUNOS_TT_COMP	= echo
MARS_TT_COMP	= $(OPENWINHOME)/bin/tt_type_comp
SVR4_TT_COMP	= $(OPENWINHOME)/bin/tt_type_comp
TT_TYPE_COMP	= $(XW_HOME)/bin/tt_type_comp

AR		= ar
PERL		= perl
MKDIR		= mkdir
CP		= cp
CHMOD		= chmod
CHGRP		= chgrp
INSTALL		= install

#----------------------------------------------------------------------------
# Install directories. Defined here so that if changes are needed, they
# can be made in one place.... 
#----------------------------------------------------------------------------

DEST.audio.method	= echo $${DESTDIR:-${PROTODIR}}

DEST.audio		= ${DEST.audio.method:sh}

# "supported" deliverables
DEST.audio.bin		= ${DEST.audio}/bin
DEST.audio.lib		= ${DEST.audio}/lib
DEST.audio.share.etc	= ${DEST.audio}/share/etc
DEST.audio.etc		= ${DEST.audio}/etc
DEST.audio.man		= ${DEST.audio}/share/man
DEST.audio.man.man1	= ${DEST.audio.man}/man1
DEST.audio.man.man3	= ${DEST.audio.man}/man3
DEST.audio.man.man6	= ${DEST.audio.man}/man6
DEST.audio.info		= ${DEST.audio.lib}/locale/C/help
DEST.audio.help		= ${DEST.audio.lib}/locale/C/help
# NOTE: this may change. sync up with DeskSet
DEST.audio.po		= ${DEST.audio.lib}/locale/C/LC_MESSAGES
DEST.audio.tt		= ${DEST.audio}/share/etc/tt

# demo stuff
DEST.audio.demo		= ${DEST.audio}/demo
DEST.audio.demo.bin	= ${DEST.audio.demo}/bin
DEST.audio.demo.info	= ${DEST.audio.demo}/help
DEST.audio.demo.help	= ${DEST.audio.demo.info}
DEST.audio.demo.lib	= ${DEST.audio.demo}/lib
DEST.audio.demo.src	= ${DEST.audio.demo}/src
DEST.audio.demo.src.gaintool	= ${DEST.audio.demo.src}/gaintool
DEST.audio.demo.src.soundtool	= ${DEST.audio.demo.src}/soundtool
DEST.audio.demo.src.radio	= ${DEST.audio.demo.src}/radio
DEST.audio.demo.src.radio.radio	= ${DEST.audio.demo.src.radio}/radio
DEST.audio.demo.src.radio.xmit	= ${DEST.audio.demo.src.radio}/xmit
DEST.audio.demo.src.radio.radio_recv	= ${DEST.audio.demo.src.radio}/radio_recv
DEST.audio.demo.src.radio.radio_xmit	= ${DEST.audio.demo.src.radio}/radio_xmit
DEST.audio.demo.src.radio.libradio	= ${DEST.audio.demo.src.radio}/libradio
DEST.audio.demo.include = ${DEST.audio.demo}/include
DEST.audio.demo.include.multimedia = ${DEST.audio.demo.include}/multimedia
DEST.audio.demo.sounds	= ${DEST.audio.demo}/sounds
DEST.audio.demo.man	= ${DEST.audio.demo}/man
DEST.audio.demo.man3	= ${DEST.audio.demo.man}/man3
DEST.audio.demo.man4	= ${DEST.audio.demo.man}/man4

# can be overridden
DIR.install.program	= ${DEST.audio.bin}
DIR.install.library	= ${DEST.audio.lib}
DIR.install.etc		= ${DEST.audio.etc}
DIR.install.scripts	= ${DEST.audio.bin}
DIR.install.files	= ${DEST.audio.lib}
DIR.install.types	= ${DEST.audio.tt}
DIR.install.messages	= ${DEST.audio.po}
DIR.install.help	= ${DEST.audio.help}
DIR.install.man		= ${DEST.audio.man.man1}
DIR.install.headers	= ${DEST.audio.demo.include}
DIR.install.src		= ${DEST.audio.demo.src}

BINDIR			= ${DEST.audio.bin}
LIBDIR			= ${DEST.audio.demo.lib}
