%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: $B
%%Title: Sun Raster Dump
%%Creator: rash utility
%%CreationDate: $d
%%Pages: 1
%
% @(#)epsf.rash	1.10 92/01/28
% Copyright 1990 Sun Microsystems Inc.
%
% This is a wrapper for the PreLimn `rash` filter. It provides EPSF
% output of a Sun rasterfile.   It directly supports the rash
% options:
%
%     -s <w> <h>
%          Scale the image to the specified width and height.
%
%     -l <x> <y>
%          Translate the lower left corner of the image by  (<x>,<y>)
%
%     -R <n>
%          Rotate the image to the specified angle, in degrees.
%
% Some other rash options, are supported internally to the rash program.
% (For example, -S, -H and -W are translated into -s).
%
%%EndComments
16 dict begin
    %
    % Buffer size will be 1 scanline wide for monochrome and 1/3 of a
    % scanline wide for color.
    %
    /imagebuf $x 8 $b sub add 8 $b idiv div cvi string def

    %
    % This function calls image or colorimage as appropriate.  In the
    % case where color data is supplied but colorimage isn't defined,
    % it attempts to recover by supplying a read proc that
    % translates rgb pixels to luminance values.   The proc requires
    % 8-bit samples, which is the only size rash (currently) produces.
    %
    /image_raster {
	dup 1 eq {
	    pop pop image
	}{
	    /colorimage where {
		pop colorimage
	    }{
		pop pop pop		% leaves w h d mat
		(%%[ color image sent to printer with no colorimage\
operator!\n) print
		1 index 8 ne {
		    (    Can't recover--flushing file. ]%%\n) print
		    currentfile flushfile
		}{  
		    (    Converting to grays. ]%%\n) print

		    /imagebuf 3 string def
		    /str1 1 string def
		    {
			str1 dup 0
			currentfile imagebuf readhexstring pop
			{} forall		% put bytes on stack
			.11 mul exch .59 mul add exch .3 mul add
			round cvi put
		    } bind image 
	        } ifelse
	    } ifelse
	} ifelse
    } def

%%EndProlog
%%Page: 1 1
    gsave
    $X $Y translate
    $r rotate
    $sx $sy scale
    $x $y $b [ $x 0 0 $y 0 0 ] 
    { currentfile imagebuf readhexstring pop } bind
    false $n image_raster
$h
end
%%Trailer
